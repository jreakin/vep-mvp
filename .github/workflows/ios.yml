name: iOS CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'ios/**'
      - '.github/workflows/ios.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'ios/**'

jobs:
  build-and-test:
    runs-on: macos-14
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Select Xcode version
      run: sudo xcode-select -s /Applications/Xcode_15.2.app/Contents/Developer
    
    - name: Show Xcode version
      run: xcodebuild -version
    
    - name: Cache Swift Package Manager
      uses: actions/cache@v3
      with:
        path: ios/VEP/.build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
    
    - name: Build
      run: |
        cd ios/VEP
        xcodebuild clean build \
          -scheme VEP \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=17.2' \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO
    
    - name: Run tests
      run: |
        cd ios/VEP
        xcodebuild test \
          -scheme VEP \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=17.2' \
          -enableCodeCoverage YES \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO
    
    - name: Generate coverage report
      run: |
        cd ios/VEP
        xcrun llvm-cov export -format="lcov" \
          .build/debug/VEPPackageTests.xctest/Contents/MacOS/VEPPackageTests \
          -instr-profile .build/debug/codecov/default.profdata > coverage.lcov || echo "Coverage generation skipped"
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./ios/VEP/coverage.lcov
        flags: ios
        name: ios-coverage

  swiftlint:
    runs-on: macos-14
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install SwiftLint
      run: brew install swiftlint
    
    - name: Lint
      run: |
        cd ios/VEP
        swiftlint lint --strict || echo "SwiftLint not configured yet"
