name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 0 * * 1' # Weekly on Monday

jobs:
  backend-quality:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.modified, 'backend/') || github.event_name == 'schedule'
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Install dependencies
      working-directory: ./backend
      run: |
        uv pip install -e ".[dev]"

    - name: Run code formatting check
      working-directory: ./backend
      run: |
        uv run black --check --diff .

    - name: Run linting
      working-directory: ./backend
      run: |
        uv run ruff check . --output-format=json > ruff-report.json

    - name: Run type checking
      working-directory: ./backend
      run: |
        uv run mypy . --junit-xml mypy-report.xml

    - name: Run security scan
      working-directory: ./backend
      run: |
        uv run bandit -r app/ -f json -o bandit-report.json

    - name: Run complexity analysis
      working-directory: ./backend
      run: |
        uv run radon cc app/ -a -j > complexity-report.json

    - name: Upload quality reports
      uses: actions/upload-artifact@v3
      with:
        name: backend-quality-reports
        path: |
          backend/ruff-report.json
          backend/mypy-report.xml
          backend/bandit-report.json
          backend/complexity-report.json

  ios-quality:
    runs-on: macos-latest
    if: contains(github.event.head_commit.modified, 'ios/') || github.event_name == 'schedule'
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'

    - name: Install SwiftLint
      run: |
        brew install swiftlint

    - name: Run SwiftLint
      working-directory: ./ios
      run: |
        swiftlint lint --reporter json > swiftlint-report.json

    - name: Run SwiftFormat check
      working-directory: ./ios
      run: |
        swiftformat --lint . > swiftformat-report.txt

    - name: Upload quality reports
      uses: actions/upload-artifact@v3
      with:
        name: ios-quality-reports
        path: |
          ios/swiftlint-report.json
          ios/swiftformat-report.txt

  dependency-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Check for security vulnerabilities
      working-directory: ./backend
      run: |
        uv pip install safety
        uv run safety check --json > safety-report.json

    - name: Check for outdated dependencies
      working-directory: ./backend
      run: |
        uv pip install pip-audit
        uv run pip-audit --format=json > pip-audit-report.json

    - name: Upload dependency reports
      uses: actions/upload-artifact@v3
      with:
        name: dependency-reports
        path: |
          backend/safety-report.json
          backend/pip-audit-report.json

  performance-test:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"

    - name: Install dependencies
      working-directory: ./backend
      run: |
        uv pip install -e ".[dev]"

    - name: Run performance tests
      working-directory: ./backend
      run: |
        uv run pytest tests/performance/ -v --benchmark-only --benchmark-json=benchmark.json

    - name: Upload performance reports
      uses: actions/upload-artifact@v3
      with:
        name: performance-reports
        path: backend/benchmark.json