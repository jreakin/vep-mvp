name: Backend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    services:
      postgres:
        image: postgis/postgis:14-3.3
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: vep_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Install UV
      run: curl -LsSf https://astral.sh/uv/install.sh | sh
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        cd backend
        uv venv
        source .venv/bin/activate
        uv pip install -e ".[dev]"
    
    - name: Run database migrations
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/vep_test
      run: |
        cd backend
        source .venv/bin/activate
        psql $DATABASE_URL -f migrations/001_initial_schema.sql || echo "Migration file not yet created by Agent 1"
    
    - name: Run linters
      run: |
        cd backend
        source .venv/bin/activate
        black --check app/
        ruff check app/
    
    - name: Run tests with coverage
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/vep_test
        SUPABASE_URL: http://localhost:54321
        SUPABASE_KEY: test-key
        JWT_SECRET: test-secret
      run: |
        cd backend
        source .venv/bin/activate
        pytest --cov=app --cov-report=xml --cov-report=term
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        flags: backend
        name: backend-coverage

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install UV
      run: curl -LsSf https://astral.sh/uv/install.sh | sh
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        cd backend
        uv venv
        source .venv/bin/activate
        uv pip install -e ".[dev]"
    
    - name: Check formatting with Black
      run: |
        cd backend
        source .venv/bin/activate
        black --check app/ tests/
    
    - name: Lint with Ruff
      run: |
        cd backend
        source .venv/bin/activate
        ruff check app/ tests/
    
    - name: Type check with mypy
      run: |
        cd backend
        source .venv/bin/activate
        mypy app/ || echo "Type checking optional for now"
