name: iOS Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'ios/**'
      - '.github/workflows/ios-tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'ios/**'
      - '.github/workflows/ios-tests.yml'

jobs:
  test:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'

    - name: Cache Swift Package Manager
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/swiftpm
          ios/.build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-

    - name: Install dependencies
      working-directory: ./ios
      run: |
        xcodebuild -resolvePackageDependencies

    - name: Run unit tests
      working-directory: ./ios
      run: |
        xcodebuild test \
          -scheme VEP \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=17.0' \
          -enableCodeCoverage YES \
          -derivedDataPath DerivedData \
          -resultBundlePath TestResults.xcresult

    - name: Run UI tests
      working-directory: ./ios
      run: |
        xcodebuild test \
          -scheme VEP \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=17.0' \
          -testPlan VEPUITests \
          -enableCodeCoverage YES \
          -derivedDataPath DerivedData \
          -resultBundlePath UITestResults.xcresult

    - name: Generate code coverage
      working-directory: ./ios
      run: |
        xcrun xccov view --report --json DerivedData/Logs/Test/*.xcresult > coverage.json

    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: |
          ios/TestResults.xcresult
          ios/UITestResults.xcresult
          ios/coverage.json

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./ios/coverage.json
        flags: ios
        name: ios-coverage

  build:
    runs-on: macos-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'

    - name: Cache Swift Package Manager
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/swiftpm
          ios/.build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-

    - name: Install dependencies
      working-directory: ./ios
      run: |
        xcodebuild -resolvePackageDependencies

    - name: Build for iOS Simulator
      working-directory: ./ios
      run: |
        xcodebuild build \
          -scheme VEP \
          -destination 'platform=iOS Simulator,name=iPhone 15,OS=17.0' \
          -derivedDataPath DerivedData

    - name: Build for iOS Device
      working-directory: ./ios
      run: |
        xcodebuild build \
          -scheme VEP \
          -destination 'generic/platform=iOS' \
          -derivedDataPath DerivedData

    - name: Archive for App Store
      working-directory: ./ios
      run: |
        xcodebuild archive \
          -scheme VEP \
          -destination 'generic/platform=iOS' \
          -archivePath VEP.xcarchive \
          -derivedDataPath DerivedData

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ios-build
        path: |
          ios/VEP.xcarchive
          ios/DerivedData